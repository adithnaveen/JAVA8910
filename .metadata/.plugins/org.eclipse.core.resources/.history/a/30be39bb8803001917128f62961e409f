package com.training.optional.basics;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import com.training.optional.bean.Place;

public class Main {
	public static void main(String[] args) {
		List<Place> places = Arrays.asList(
				new Place("Karnataka", "Bengaluru", Arrays.asList("Mysuru", "Mangaluru", "Belagavi", "Tumakuru")),
				new Place("Rajasthan", "Jaipur", Arrays.asList("Jodhpur", "Kota", "Bikaner", "Udaipur")),
				new Place("Virginia", "Richmond",
						Arrays.asList("Orange County", "Prince Edward County", "Williamsburg", "Radford")),
				new Place("Andra", "Hyderabad", Arrays.asList("Mysuru", "Mangaluru", "Belagavi", "Tumakuru")),
				new Place("Nauru", null, null));

		IBusinessLogic service = new BusinessLogic(places);

		System.out.println(service.getCapitalCity("Karnataka"));

		String city = "Karnataka"; 
//		oldWay(service, city);
//		withOptionals(service, city);

		// working with map and optional 
		Optional<List<Place>> optionalList =Optional.of(places);  
				
		boolean capitalPresent = optionalList.map(List:: size).orElse(0); 
		
	}

	/*
	 * This method does exactly as same with oldWay(), but you dont 
	 */
	private static void withOptionals(IBusinessLogic service, String city) {
		List<String>  listOfCities  = Optional.ofNullable(service.getTravelPlaces(city)).orElseGet(ArrayList :: new);
		for (String temp : listOfCities) {
			System.out.println(temp);
		}
	}

	/*
	 *  This Method would check with if condition 
	 */
	private static void oldWay(IBusinessLogic service, String city) {
		List<String> listOfCities = service.getTravelPlaces(city);
		if (listOfCities != null) {
			for (String temp : listOfCities) {
				System.out.println(temp);
			}
		}else {
			System.out.println("No Cities Found ");
			listOfCities = new ArrayList<>(); 
		}
	}
}
